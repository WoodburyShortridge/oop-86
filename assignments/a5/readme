Assignment 5
Woodbury Shrtridge | woodbury.shortridge@tufts.edu

Design Overview:
This program is a satellite control user interface. The satellite view displays various types of satellites rotating in space:
Research, Communications, and Weather satellites. The operator can launch more satellites into space using the ComboBox
to select satellite type and clicking the launch button. The operator may also select satellites using the mouse. Once a
satellite is selected it turns green to show it is engaged. When a satellite is engaged, the disabled rotation controls become
engaged. Then, the operator can select a new rotation speed and change it with the rotation button. If the operator clicks on
anything other than a satellite, the rotation controls are disabled.

Outline:
The Main.java file extends JFrame and creates the main frame for the program. This fame is closed when the operator exits the
program. The major widgets are added to the program in the main frame: satellite model, add controls, and rotation controls. The main
frame also controls the timer that is used to animate the satellite model. The add controls extends Jpanel and contains several custom objects:
a label, a satellite selector combo box, and an add button. The rotation controls also extend Jpanel and contains several custom objects:
a label, a speed selector combo box, and a change rotation speed button. The satellite model is an object that holds the overall satellite data: position,
type, ID, rotation speed/direction, and selection state. It also create and maintains the drawing canvas, provides the main redrawing routine for it, which creates
the specific satellites for the interface. In addition, it provides a mouse listener for selecting satellites. Each satellite extends an abstract satellite
class that stores satellite data and builds the Basic satellite body and ID tag. The different satellite classes extend this abstract by adding unique wings.

Compile:
$ javac *.java

Run:
$ java Main

Usage:
Select the satellite type you want to launch into space. Then click the launch button. You may change the rotation speed of a satellite by
clicking it with the mouse, selecting a new rotation speed and clicking the change button.

Hierarchy:
- Main.java
		- Model.java
        - Satellite.java
            - ResearchSatellite.java
            - WeatherSatellite.java
            - CommunicationSatellite.java
    - AddControl.java
        - SatelliteSelector.java
        - AddButton.java
    - RotationControl.java
        - SpeedSelector.java
        - RotationButton.java

Uses:
~ Main: Uses a frame to create a new window and add two control views and one model.
~ Model: Uses a panel to create and maintain a model object that stores satellite data
and paints the satellites.
~ Satellite: Uses a panel to create an abstract satellite class.
    ~ResearchSatellite: Uses a satellite to extend the drawing method.
    ~WeatherSatellite: Uses a satellite to extend the drawing method.
    ~CommunicationSatellite: Uses a satellite to extend the drawing method.
~ AddControl: Uses a panel to create an interface layout for adding satellites
~ RotationControl: Uses a panel to create an interface layout for changing rotation speed
~ RotationButton & AddButton: Both use a button to add a custom event listener
~ SpeedSelector & SatelliteSelector: Both use a ComboBox to add a create a unique Selector

Secrets:
- Main: Contains secret information about the frame count and how to place the two control views and model
- Model: Contains secret information about how to draw each satellite (position, type, ID, rotation speed/direction, and selection state)
- Satellite: Contains secret information about how to draw the body of a satellite.
- ResearchSatellite: Contains secret information about how to draw the unique wings.
- WeatherSatellite: Contains secret information about how to draw the unique wings.
- CommunicationSatellite: Contains secret information about how to draw the unique wings.
- RotationControl: Contains secret information about the interface layout
- addControl: Contains secret information about the interface layout
